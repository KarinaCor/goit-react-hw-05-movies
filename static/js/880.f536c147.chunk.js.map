{"version":3,"file":"static/js/880.f536c147.chunk.js","mappings":"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","sources":["components/FilmList/FilmList.styled.js","components/FilmList/FilmList.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/getMovie.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\nmargin-top: 12px;\n`\nexport const Item = styled.li`\nmargin-bottom: 6px;\npadding: 16px;\ndisplay: block;\ncolor: white;\n`","import { useLocation, Link } from 'react-router-dom';\n\nimport * as SC from '../FilmList/FilmList.styled'\n\nconst FilmsList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <SC.List>\n      {movies.map(({ id, original_title }) => (\n        <SC.Item key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {original_title}\n          </Link>\n        </SC.Item>\n      ))}\n    </SC.List>\n  );\n};\n\nexport default FilmsList;","import styled from \"styled-components\";\n\nexport const InputSearch = styled.input`\nfont-weight: 500;\n    font-size: 18px;\n    line-height: 27px;\n    padding: 15px 16px;\n    color: rgba(255, 255, 255, 0.2);\n    background: rgb(43, 43, 43);\n    border-radius: 10px;\n`\nexport const ButtonSearch = styled.button`\nfont-weight: 500;\n    font-size: 18px;\n    line-height: 27px;\n    margin-left: 12px;\n    padding: 15px 16px;\n    color: white;\n    background: rgb(43, 43, 43);\n    border-radius: 10px;\n`","import { useState } from 'react';\nimport * as SC from '../Form/Form.styled'\n\nconst Form = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SC.InputSearch\n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <SC.ButtonSearch type=\"submit\" disabled={!query}>\n        Search\n      </SC.ButtonSearch>\n    </form>\n  );\n};\n\nexport default Form;","import { getMovieByQuery } from 'services/getMovie';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Form from 'components/Form/Form';\nimport FilmsList from 'components/FilmList/FilmList';\n\n\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([])\n    const [searchParams, setSearchParams] = useSearchParams()\n\n    useEffect (() => {\n        const currentQuery = searchParams.get('query')\n        if (!currentQuery) return\n\n        const fetchMovieByQuery = async () => {\n            try {\n                const movieByQuery = await getMovieByQuery(currentQuery)\n                setMovies(movieByQuery)\n            }\n            catch(e) {\n                console.log(e);\n            }\n        }\n        fetchMovieByQuery()\n    },[searchParams])\n\n    return (\n        <>\n          <Form setSearchParams={setSearchParams} />\n          {movies.length > 0 && <FilmsList movies={movies} />}\n        </>\n      );\n}\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3373af60a4ee1fe7510a1a61c11380e1';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","_ref","movies","location","useLocation","_jsx","SC","children","map","_ref2","id","original_title","Link","state","from","to","concat","InputSearch","ButtonSearch","setSearchParams","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","e","preventDefault","type","placeholder","autoFocus","value","onChange","target","disabled","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","useEffect","currentQuery","get","fetchMovieByQuery","_asyncToGenerator","_regeneratorRuntime","_callee","movieByQuery","_context","prev","next","getMovieByQuery","sent","t0","console","log","stop","apply","arguments","_Fragment","Form","length","FilmsList","axios","API_KEY","getTrendingMovies","_yield$axios$get","data","abrupt","results","_callee2","_yield$axios$get2","_context2","_x","getMovieById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getCastMovie","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getReviewsMovie","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}